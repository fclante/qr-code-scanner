<div class="container">
  <h1><%= item ? 'Update' : 'Create New' %> Item</h1>

  <div class="card">
    <div class="card-body">
      <form action="<%= item ? `/update/${item.id}` : '/create' %>" method="POST" id="itemForm" class="form-grid">
        <div class="form-group">
          <label for="name">Name:</label>
          <input type="text" name="name" value="<%= item ? item.name : '' %>" required>
        </div>
        
        <div class="form-group">
          <label for="price">Price:</label>
          <input type="number" step="0.01" name="price" value="<%= item ? item.price : '' %>" required>
        </div>
        
        <div class="form-group">
          <label for="date_added">Date Added:</label>
          <input type="date" name="date_added" value="<%= item ? item.date_added : new Date().toISOString().split('T')[0] %>" required>
        </div>
        
        <div class="form-group">
          <label for="expiration_date">Expiration Date:</label>
          <%
            let defaultExpDate;
            if (item) {
              defaultExpDate = item.expiration_date;
            } else {
              const oneWeekFromNow = new Date();
              oneWeekFromNow.setDate(oneWeekFromNow.getDate() + 7);
              defaultExpDate = oneWeekFromNow.toISOString().split('T')[0];
            }
          %>
          <input type="date" name="expiration_date" value="<%= item ? item.expiration_date : defaultExpDate %>" required>
        </div>
        
        <div class="form-group">
          <label for="quantity">Quantity:</label>
          <input type="number" name="quantity" value="<%= item ? item.quantity : 20 %>" required>
        </div>
        
        <div class="form-group">
          <label for="category_id">Category:</label>
          <select name="category_id" required>
            <% categories.forEach(category => { %>
              <option value="<%= category.id %>" <%= item && item.category_id === category.id ? 'selected' : '' %>>
                <%= category.name %>
              </option>
            <% }); %>
          </select>
        </div>

        <div class="form-group">
          <label for="ean_country_code">EAN GS1 Country Code:</label>
          <input type="text" name="ean_country_code" value="<%= item ? item.ean_country_code : '570-579' %>" required>
        </div>

        <div class="form-group">
          <label for="ean_manufacturer_code">EAN Manufacturer Code:</label>
          <input type="number" name="ean_manufacturer_code" value="<%= item ? item.ean_manufacturer_code : '' %>" required>
        </div>

        <div class="form-group">
          <label for="ean_product_code">EAN Product Code:</label>
          <input type="number" name="ean_product_code" value="<%= item ? item.ean_product_code : '' %>" required>
        </div>

        <div class="form-group">
          <label for="ean_check_digit">EAN Check Digit:</label>
          <input type="number" name="ean_check_digit" value="<%= item ? item.ean_check_digit : '' %>" required>
        </div>
        
        <div class="form-group">
          <label for="in_stock">In Stock:</label>
          <select name="in_stock" required>
            <option value="true" <%= item && item.in_stock ? 'selected' : '' %>>Yes</option>
            <option value="false" <%= item && !item.in_stock ? 'selected' : '' %>>No</option>
          </select>
        </div>
        
        <div class="form-actions">
          <button type="submit" class="btn btn-success"><%= item ? 'Update' : 'Create' %> Item</button>
        </div>
      </form>
    </div>
  </div>
</div>

<style>
/* Local styles specific to create/update form */
.form-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 1rem;
  padding: 1rem 0;
}

.form-group {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.form-group label {
  font-weight: bold;
}

.form-group input,
.form-group select {
  padding: 0.5rem;
  border: 1px solid #ddd;
  border-radius: 4px;
  font-size: 1rem;
}

.form-actions {
  grid-column: 1 / -1;
  padding-top: 1rem;
  border-top: 1px solid #eee;
}

@media (max-width: 768px) {
  .form-grid {
    grid-template-columns: 1fr;
  }
  
  .form-group input,
  .form-group select {
    width: 100%;
  }
}
</style>

<% if (item) { %>
<script>
document.getElementById('itemForm').addEventListener('submit', async (e) => {
  e.preventDefault();
  const formData = new FormData(e.target);
  const data = {
    name: formData.get('name'),
    price: parseFloat(formData.get('price')),
    date_added: formData.get('date_added'),
    expiration_date: formData.get('expiration_date'),
    quantity: parseInt(formData.get('quantity')),
    in_stock: formData.get('in_stock') === 'true',
    category_id: parseInt(formData.get('category_id')),
    ean_country_code: formData.get('ean_country_code'),
    ean_manufacturer_code: formData.get('ean_manufacturer_code'),
    ean_product_code: formData.get('ean_product_code'),
    ean_check_digit: formData.get('ean_check_digit')
  };
  
  try {
    const response = await fetch(e.target.action, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Accept': 'application/json'
      },
      body: JSON.stringify(data),
      credentials: 'same-origin'
    });
    
    if (response.ok) {
      window.location.href = '/medarbejder/varer';
    } else {
      const responseText = await response.text();
      alert(`Error updating item: ${responseText}`);
    }
  } catch (error) {
    console.error('Error:', error);
    alert('Error updating item: ' + error.message);
  }
});
</script>
<% } %>
